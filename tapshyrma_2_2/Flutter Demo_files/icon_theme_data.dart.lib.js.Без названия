// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "windows_x64"
// Module: packages/flutter/src/widgets/icon_theme_data.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/math.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/widgets/title.dart'], (function load__packages__flutter__src__widgets__icon_theme_data_dart(dart_sdk, packages__flutter__src__foundation__math$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__widgets__title$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const math = packages__flutter__src__foundation__math$46dart.src__foundation__math;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const framework = packages__flutter__src__widgets__title$46dart.src__widgets__framework;
  var icon_theme_data = Object.create(dart.library);
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    IterablePropertyOfShadow: () => (T.IterablePropertyOfShadow = dart.constFn(diagnostics.IterableProperty$(ui.Shadow)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    }
  }, false);
  var C = [void 0];
  var I = [
    "file:///C:/src/flutter/packages/flutter/lib/src/widgets/icon_theme_data.dart",
    "package:flutter/src/widgets/icon_theme_data.dart"
  ];
  var size$ = dart.privateName(icon_theme_data, "IconThemeData.size");
  var fill$ = dart.privateName(icon_theme_data, "IconThemeData.fill");
  var weight$ = dart.privateName(icon_theme_data, "IconThemeData.weight");
  var grade$ = dart.privateName(icon_theme_data, "IconThemeData.grade");
  var opticalSize$ = dart.privateName(icon_theme_data, "IconThemeData.opticalSize");
  var color$ = dart.privateName(icon_theme_data, "IconThemeData.color");
  var _opacity = dart.privateName(icon_theme_data, "IconThemeData._opacity");
  var shadows$ = dart.privateName(icon_theme_data, "IconThemeData.shadows");
  var Color_value = dart.privateName(ui, "Color.value");
  var _opacity$ = dart.privateName(icon_theme_data, "_opacity");
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  icon_theme_data.IconThemeData = class IconThemeData extends Object_Diagnosticable$36 {
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get fill() {
      return this[fill$];
    }
    set fill(value) {
      super.fill = value;
    }
    get weight() {
      return this[weight$];
    }
    set weight(value) {
      super.weight = value;
    }
    get grade() {
      return this[grade$];
    }
    set grade(value) {
      super.grade = value;
    }
    get opticalSize() {
      return this[opticalSize$];
    }
    set opticalSize(value) {
      super.opticalSize = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get [_opacity$]() {
      return this[_opacity];
    }
    set [_opacity$](value) {
      super[_opacity$] = value;
    }
    get shadows() {
      return this[shadows$];
    }
    set shadows(value) {
      super.shadows = value;
    }
    static ['_#new#tearOff'](opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let fill = opts && 'fill' in opts ? opts.fill : null;
      let weight = opts && 'weight' in opts ? opts.weight : null;
      let grade = opts && 'grade' in opts ? opts.grade : null;
      let opticalSize = opts && 'opticalSize' in opts ? opts.opticalSize : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let opacity = opts && 'opacity' in opts ? opts.opacity : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      return new icon_theme_data.IconThemeData.new({size: size, fill: fill, weight: weight, grade: grade, opticalSize: opticalSize, color: color, opacity: opacity, shadows: shadows});
    }
    static ['_#fallback#tearOff']() {
      return new icon_theme_data.IconThemeData.fallback();
    }
    copyWith(opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5;
      let size = opts && 'size' in opts ? opts.size : null;
      let fill = opts && 'fill' in opts ? opts.fill : null;
      let weight = opts && 'weight' in opts ? opts.weight : null;
      let grade = opts && 'grade' in opts ? opts.grade : null;
      let opticalSize = opts && 'opticalSize' in opts ? opts.opticalSize : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let opacity = opts && 'opacity' in opts ? opts.opacity : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      return new icon_theme_data.IconThemeData.new({size: (t0 = size, t0 == null ? this.size : t0), fill: (t0$ = fill, t0$ == null ? this.fill : t0$), weight: (t0$0 = weight, t0$0 == null ? this.weight : t0$0), grade: (t0$1 = grade, t0$1 == null ? this.grade : t0$1), opticalSize: (t0$2 = opticalSize, t0$2 == null ? this.opticalSize : t0$2), color: (t0$3 = color, t0$3 == null ? this.color : t0$3), opacity: (t0$4 = opacity, t0$4 == null ? this.opacity : t0$4), shadows: (t0$5 = shadows, t0$5 == null ? this.shadows : t0$5)});
    }
    merge(other) {
      if (other == null) {
        return this;
      }
      return this.copyWith({size: other.size, fill: other.fill, weight: other.weight, grade: other.grade, opticalSize: other.opticalSize, color: other.color, opacity: other.opacity, shadows: other.shadows});
    }
    resolve(context) {
      return this;
    }
    get isConcrete() {
      return this.size != null && this.fill != null && this.weight != null && this.grade != null && this.opticalSize != null && this.color != null && this.opacity != null;
    }
    get opacity() {
      return this[_opacity$] == null ? null : math.clampDouble(dart.nullCheck(this[_opacity$]), 0.0, 1.0);
    }
    static lerp(a, b, t) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7, t0$8, t0$9, t0$10, t0$11, t0$12, t0$13;
      if (!(t !== null)) dart.assertFailed(null, I[0], 170, 12, "t != null");
      return new icon_theme_data.IconThemeData.new({size: ui.lerpDouble((t0 = a, t0 == null ? null : t0.size), (t0$ = b, t0$ == null ? null : t0$.size), t), fill: ui.lerpDouble((t0$0 = a, t0$0 == null ? null : t0$0.fill), (t0$1 = b, t0$1 == null ? null : t0$1.fill), t), weight: ui.lerpDouble((t0$2 = a, t0$2 == null ? null : t0$2.weight), (t0$3 = b, t0$3 == null ? null : t0$3.weight), t), grade: ui.lerpDouble((t0$4 = a, t0$4 == null ? null : t0$4.grade), (t0$5 = b, t0$5 == null ? null : t0$5.grade), t), opticalSize: ui.lerpDouble((t0$6 = a, t0$6 == null ? null : t0$6.opticalSize), (t0$7 = b, t0$7 == null ? null : t0$7.opticalSize), t), color: ui.Color.lerp((t0$8 = a, t0$8 == null ? null : t0$8.color), (t0$9 = b, t0$9 == null ? null : t0$9.color), t), opacity: ui.lerpDouble((t0$10 = a, t0$10 == null ? null : t0$10.opacity), (t0$11 = b, t0$11 == null ? null : t0$11.opacity), t), shadows: ui.Shadow.lerpList((t0$12 = a, t0$12 == null ? null : t0$12.shadows), (t0$13 = b, t0$13 == null ? null : t0$13.shadows), t)});
    }
    _equals(other) {
      if (other == null) return false;
      if (!other[$runtimeType]._equals(this[$runtimeType])) {
        return false;
      }
      return icon_theme_data.IconThemeData.is(other) && other.size == this.size && other.fill == this.fill && other.weight == this.weight && other.grade == this.grade && other.opticalSize == this.opticalSize && dart.equals(other.color, this.color) && other.opacity == this.opacity && collections.listEquals(ui.Shadow, other.shadows, this.shadows);
    }
    get hashCode() {
      return core.Object.hash(this.size, this.fill, this.weight, this.grade, this.opticalSize, this.color, this.opacity, this.shadows == null ? null : core.Object.hashAll(dart.nullCheck(this.shadows)));
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("size", this.size, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("fill", this.fill, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("weight", this.weight, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("grade", this.grade, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("opticalSize", this.opticalSize, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("opacity", this.opacity, {defaultValue: null}));
      properties.add(new (T.IterablePropertyOfShadow()).new("shadows", this.shadows, {defaultValue: null}));
    }
  };
  (icon_theme_data.IconThemeData.new = function(opts) {
    let size = opts && 'size' in opts ? opts.size : null;
    let fill = opts && 'fill' in opts ? opts.fill : null;
    let weight = opts && 'weight' in opts ? opts.weight : null;
    let grade = opts && 'grade' in opts ? opts.grade : null;
    let opticalSize = opts && 'opticalSize' in opts ? opts.opticalSize : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    let shadows = opts && 'shadows' in opts ? opts.shadows : null;
    this[size$] = size;
    this[fill$] = fill;
    this[weight$] = weight;
    this[grade$] = grade;
    this[opticalSize$] = opticalSize;
    this[color$] = color;
    this[shadows$] = shadows;
    this[_opacity] = opacity;
    if (!(fill == null || 0.0 <= dart.notNull(fill) && dart.notNull(fill) <= 1.0)) dart.assertFailed(null, I[0], 35, 15, "fill == null || (0.0 <= fill && fill <= 1.0)");
    if (!(weight == null || 0.0 < dart.notNull(weight))) dart.assertFailed(null, I[0], 36, 15, "weight == null || (0.0 < weight)");
    if (!(opticalSize == null || 0.0 < dart.notNull(opticalSize))) dart.assertFailed(null, I[0], 37, 15, "opticalSize == null || (0.0 < opticalSize)");
    ;
  }).prototype = icon_theme_data.IconThemeData.prototype;
  (icon_theme_data.IconThemeData.fallback = function() {
    this[size$] = 24.0;
    this[fill$] = 0.0;
    this[weight$] = 400.0;
    this[grade$] = 0.0;
    this[opticalSize$] = 48.0;
    this[color$] = C[0] || CT.C0;
    this[_opacity] = 1.0;
    this[shadows$] = null;
    ;
  }).prototype = icon_theme_data.IconThemeData.prototype;
  dart.addTypeTests(icon_theme_data.IconThemeData);
  dart.addTypeCaches(icon_theme_data.IconThemeData);
  dart.setMethodSignature(icon_theme_data.IconThemeData, () => ({
    __proto__: dart.getMethods(icon_theme_data.IconThemeData.__proto__),
    copyWith: dart.fnType(icon_theme_data.IconThemeData, [], {color: dart.nullable(ui.Color), fill: dart.nullable(core.double), grade: dart.nullable(core.double), opacity: dart.nullable(core.double), opticalSize: dart.nullable(core.double), shadows: dart.nullable(core.List$(ui.Shadow)), size: dart.nullable(core.double), weight: dart.nullable(core.double)}, {}),
    merge: dart.fnType(icon_theme_data.IconThemeData, [dart.nullable(icon_theme_data.IconThemeData)]),
    resolve: dart.fnType(icon_theme_data.IconThemeData, [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(icon_theme_data.IconThemeData, () => ['lerp']);
  dart.setGetterSignature(icon_theme_data.IconThemeData, () => ({
    __proto__: dart.getGetters(icon_theme_data.IconThemeData.__proto__),
    isConcrete: core.bool,
    opacity: dart.nullable(core.double)
  }));
  dart.setLibraryUri(icon_theme_data.IconThemeData, I[1]);
  dart.setFieldSignature(icon_theme_data.IconThemeData, () => ({
    __proto__: dart.getFields(icon_theme_data.IconThemeData.__proto__),
    size: dart.finalFieldType(dart.nullable(core.double)),
    fill: dart.finalFieldType(dart.nullable(core.double)),
    weight: dart.finalFieldType(dart.nullable(core.double)),
    grade: dart.finalFieldType(dart.nullable(core.double)),
    opticalSize: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    [_opacity$]: dart.finalFieldType(dart.nullable(core.double)),
    shadows: dart.finalFieldType(dart.nullable(core.List$(ui.Shadow)))
  }));
  dart.defineExtensionMethods(icon_theme_data.IconThemeData, ['_equals']);
  dart.defineExtensionAccessors(icon_theme_data.IconThemeData, ['hashCode']);
  dart.trackLibraries("packages/flutter/src/widgets/icon_theme_data.dart", {
    "package:flutter/src/widgets/icon_theme_data.dart": icon_theme_data
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["icon_theme_data.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/widgets/icon_theme_data.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__icon_theme_data: icon_theme_data
  };
}));

//# sourceMappingURL=icon_theme_data.dart.lib.js.map
