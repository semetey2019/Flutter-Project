// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "windows_x64"
// Module: packages/flutter/src/rendering/service_extensions.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk'], (function load__packages__flutter__src__rendering__service_extensions_dart(dart_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var service_extensions = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "invertOversizedImages",
        [_Enum_index]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugPaint",
        [_Enum_index]: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugPaintBaselinesEnabled",
        [_Enum_index]: 2
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "repaintRainbow",
        [_Enum_index]: 3
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugDumpLayerTree",
        [_Enum_index]: 4
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugDisableClipLayers",
        [_Enum_index]: 5
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugDisablePhysicalShapeLayers",
        [_Enum_index]: 6
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugDisableOpacityLayers",
        [_Enum_index]: 7
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugDumpRenderTree",
        [_Enum_index]: 8
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugDumpSemanticsTreeInTraversalOrder",
        [_Enum_index]: 9
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "debugDumpSemanticsTreeInInverseHitTestOrder",
        [_Enum_index]: 10
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "profileRenderObjectPaints",
        [_Enum_index]: 11
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: service_extensions.RenderingServiceExtensions.prototype,
        [_Enum__name]: "profileRenderObjectLayouts",
        [_Enum_index]: 12
      });
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13], service_extensions.RenderingServiceExtensions);
    }
  }, false);
  var C = Array(14).fill(void 0);
  var I = ["package:flutter/src/rendering/service_extensions.dart"];
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  service_extensions.RenderingServiceExtensions = class RenderingServiceExtensions extends core._Enum {
    [_enumToString]() {
      return "RenderingServiceExtensions." + this[_name];
    }
  };
  (service_extensions.RenderingServiceExtensions.new = function(index, name) {
    service_extensions.RenderingServiceExtensions.__proto__.new.call(this, index, name);
    ;
  }).prototype = service_extensions.RenderingServiceExtensions.prototype;
  dart.addTypeTests(service_extensions.RenderingServiceExtensions);
  dart.addTypeCaches(service_extensions.RenderingServiceExtensions);
  dart.setMethodSignature(service_extensions.RenderingServiceExtensions, () => ({
    __proto__: dart.getMethods(service_extensions.RenderingServiceExtensions.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(service_extensions.RenderingServiceExtensions, I[0]);
  dart.setStaticFieldSignature(service_extensions.RenderingServiceExtensions, () => ['values', 'invertOversizedImages', 'debugPaint', 'debugPaintBaselinesEnabled', 'repaintRainbow', 'debugDumpLayerTree', 'debugDisableClipLayers', 'debugDisablePhysicalShapeLayers', 'debugDisableOpacityLayers', 'debugDumpRenderTree', 'debugDumpSemanticsTreeInTraversalOrder', 'debugDumpSemanticsTreeInInverseHitTestOrder', 'profileRenderObjectPaints', 'profileRenderObjectLayouts']);
  dart.defineLazy(service_extensions.RenderingServiceExtensions, {
    /*service_extensions.RenderingServiceExtensions.values*/get values() {
      return C[0] || CT.C0;
    },
    /*service_extensions.RenderingServiceExtensions.invertOversizedImages*/get invertOversizedImages() {
      return C[1] || CT.C1;
    },
    /*service_extensions.RenderingServiceExtensions.debugPaint*/get debugPaint() {
      return C[2] || CT.C2;
    },
    /*service_extensions.RenderingServiceExtensions.debugPaintBaselinesEnabled*/get debugPaintBaselinesEnabled() {
      return C[3] || CT.C3;
    },
    /*service_extensions.RenderingServiceExtensions.repaintRainbow*/get repaintRainbow() {
      return C[4] || CT.C4;
    },
    /*service_extensions.RenderingServiceExtensions.debugDumpLayerTree*/get debugDumpLayerTree() {
      return C[5] || CT.C5;
    },
    /*service_extensions.RenderingServiceExtensions.debugDisableClipLayers*/get debugDisableClipLayers() {
      return C[6] || CT.C6;
    },
    /*service_extensions.RenderingServiceExtensions.debugDisablePhysicalShapeLayers*/get debugDisablePhysicalShapeLayers() {
      return C[7] || CT.C7;
    },
    /*service_extensions.RenderingServiceExtensions.debugDisableOpacityLayers*/get debugDisableOpacityLayers() {
      return C[8] || CT.C8;
    },
    /*service_extensions.RenderingServiceExtensions.debugDumpRenderTree*/get debugDumpRenderTree() {
      return C[9] || CT.C9;
    },
    /*service_extensions.RenderingServiceExtensions.debugDumpSemanticsTreeInTraversalOrder*/get debugDumpSemanticsTreeInTraversalOrder() {
      return C[10] || CT.C10;
    },
    /*service_extensions.RenderingServiceExtensions.debugDumpSemanticsTreeInInverseHitTestOrder*/get debugDumpSemanticsTreeInInverseHitTestOrder() {
      return C[11] || CT.C11;
    },
    /*service_extensions.RenderingServiceExtensions.profileRenderObjectPaints*/get profileRenderObjectPaints() {
      return C[12] || CT.C12;
    },
    /*service_extensions.RenderingServiceExtensions.profileRenderObjectLayouts*/get profileRenderObjectLayouts() {
      return C[13] || CT.C13;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/rendering/service_extensions.dart", {
    "package:flutter/src/rendering/service_extensions.dart": service_extensions
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["service_extensions.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwJA;;;;;;;;;;;;;;;MA5IK,oDAAM;;;MAYT,mEAAqB;;;MAYrB,wDAAU;;;MAWV,wEAA0B;;;MAY1B,4DAAc;;;MASd,gEAAkB;;;MAYlB,oEAAsB;;;MAWtB,6EAA+B;;;MAW/B,uEAAyB;;;MASzB,iEAAmB;;;MASnB,oFAAsC;;;MAStC,yFAA2C;;;MAW3C,uEAAyB;;;MAWzB,wEAA0B","file":"../../../../../../../packages/flutter/src/rendering/service_extensions.dart.lib.js"}');
  // Exports:
  return {
    src__rendering__service_extensions: service_extensions
  };
}));

//# sourceMappingURL=service_extensions.dart.lib.js.map
