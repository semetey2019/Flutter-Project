// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "windows_x64"
// Module: packages/flutter/src/widgets/visibility.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/widgets/title.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/rendering/proxy_sliver.dart'], (function load__packages__flutter__src__widgets__visibility_dart(dart_sdk, packages__flutter__src__widgets__title$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__rendering__proxy_sliver$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const basic = packages__flutter__src__widgets__title$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__title$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__title$46dart.src__widgets__framework;
  const ticker_provider = packages__flutter__src__widgets__title$46dart.src__widgets__ticker_provider;
  const sliver = packages__flutter__src__widgets__title$46dart.src__widgets__sliver;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const proxy_sliver = packages__flutter__src__rendering__proxy_sliver$46dart.src__rendering__proxy_sliver;
  var visibility = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 30,
        [_Location_line]: 58,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[1] || CT.C1,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 30,
        [_Location_line]: 99,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[3] || CT.C3,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Visibility",
        [_Location_column]: 9,
        [_Location_line]: 55,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Visibility",
        [_Location_column]: 9,
        [_Location_line]: 96,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "IgnorePointer",
        [_Location_column]: 18,
        [_Location_line]: 241,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_Visibility",
        [_Location_column]: 14,
        [_Location_line]: 247,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "TickerMode",
        [_Location_column]: 18,
        [_Location_line]: 259,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Offstage",
        [_Location_column]: 14,
        [_Location_line]: 261,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SliverToBoxAdapter",
        [_Location_column]: 36,
        [_Location_line]: 325,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: basic.SliverToBoxAdapter.prototype,
        [Widget__location]: C[11] || CT.C11,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SliverToBoxAdapter",
        [_Location_column]: 36,
        [_Location_line]: 368,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: basic.SliverToBoxAdapter.prototype,
        [Widget__location]: C[13] || CT.C13,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SliverVisibility",
        [_Location_column]: 9,
        [_Location_line]: 322,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SliverVisibility",
        [_Location_column]: 9,
        [_Location_line]: 365,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SliverIgnorePointer",
        [_Location_column]: 18,
        [_Location_line]: 500,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_SliverVisibility",
        [_Location_column]: 14,
        [_Location_line]: 506,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "TickerMode",
        [_Location_column]: 18,
        [_Location_line]: 518,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SliverOffstage",
        [_Location_column]: 14,
        [_Location_line]: 520,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_Visibility",
        [_Location_column]: 9,
        [_Location_line]: 549,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_SliverVisibility",
        [_Location_column]: 9,
        [_Location_line]: 613,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    }
  }, false);
  var C = Array(22).fill(void 0);
  var I = [
    "file:///C:/src/flutter/packages/flutter/lib/src/widgets/visibility.dart",
    "package:flutter/src/widgets/visibility.dart"
  ];
  var child$ = dart.privateName(visibility, "Visibility.child");
  var replacement$ = dart.privateName(visibility, "Visibility.replacement");
  var visible$ = dart.privateName(visibility, "Visibility.visible");
  var maintainState$ = dart.privateName(visibility, "Visibility.maintainState");
  var maintainAnimation$ = dart.privateName(visibility, "Visibility.maintainAnimation");
  var maintainSize$ = dart.privateName(visibility, "Visibility.maintainSize");
  var maintainSemantics$ = dart.privateName(visibility, "Visibility.maintainSemantics");
  var maintainInteractivity$ = dart.privateName(visibility, "Visibility.maintainInteractivity");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  visibility.Visibility = class Visibility extends framework.StatelessWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get replacement() {
      return this[replacement$];
    }
    set replacement(value) {
      super.replacement = value;
    }
    get visible() {
      return this[visible$];
    }
    set visible(value) {
      super.visible = value;
    }
    get maintainState() {
      return this[maintainState$];
    }
    set maintainState(value) {
      super.maintainState = value;
    }
    get maintainAnimation() {
      return this[maintainAnimation$];
    }
    set maintainAnimation(value) {
      super.maintainAnimation = value;
    }
    get maintainSize() {
      return this[maintainSize$];
    }
    set maintainSize(value) {
      super.maintainSize = value;
    }
    get maintainSemantics() {
      return this[maintainSemantics$];
    }
    set maintainSemantics(value) {
      super.maintainSemantics = value;
    }
    get maintainInteractivity() {
      return this[maintainInteractivity$];
    }
    set maintainInteractivity(value) {
      super.maintainInteractivity = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let replacement = opts && 'replacement' in opts ? opts.replacement : C[0] || CT.C0;
      let visible = opts && 'visible' in opts ? opts.visible : true;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
      let maintainAnimation = opts && 'maintainAnimation' in opts ? opts.maintainAnimation : false;
      let maintainSize = opts && 'maintainSize' in opts ? opts.maintainSize : false;
      let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : false;
      let maintainInteractivity = opts && 'maintainInteractivity' in opts ? opts.maintainInteractivity : false;
      return new visibility.Visibility.new({key: key, child: child, replacement: replacement, visible: visible, maintainState: maintainState, maintainAnimation: maintainAnimation, maintainSize: maintainSize, maintainSemantics: maintainSemantics, maintainInteractivity: maintainInteractivity, $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
    }
    static ['_#maintain#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let replacement = opts && 'replacement' in opts ? opts.replacement : C[2] || CT.C2;
      let visible = opts && 'visible' in opts ? opts.visible : true;
      return new visibility.Visibility.maintain({key: key, child: child, replacement: replacement, visible: visible, $creationLocationd_0dea112b090073317d4: C[5] || CT.C5});
    }
    build(context) {
      if (this.maintainSize) {
        let result = this.child;
        if (!this.maintainInteractivity) {
          result = new basic.IgnorePointer.new({ignoring: !this.visible, ignoringSemantics: !this.visible && !this.maintainSemantics, child: this.child, $creationLocationd_0dea112b090073317d4: C[6] || CT.C6});
        }
        return new visibility._Visibility.new({visible: this.visible, maintainSemantics: this.maintainSemantics, child: result, $creationLocationd_0dea112b090073317d4: C[7] || CT.C7});
      }
      if (!!this.maintainInteractivity) dart.assertFailed(null, I[0], 253, 12, "!maintainInteractivity");
      if (!!this.maintainSemantics) dart.assertFailed(null, I[0], 254, 12, "!maintainSemantics");
      if (!!this.maintainSize) dart.assertFailed(null, I[0], 255, 12, "!maintainSize");
      if (this.maintainState) {
        let result = this.child;
        if (!this.maintainAnimation) {
          result = new ticker_provider.TickerMode.new({enabled: this.visible, child: this.child, $creationLocationd_0dea112b090073317d4: C[8] || CT.C8});
        }
        return new basic.Offstage.new({offstage: !this.visible, child: result, $creationLocationd_0dea112b090073317d4: C[9] || CT.C9});
      }
      if (!!this.maintainAnimation) dart.assertFailed(null, I[0], 266, 12, "!maintainAnimation");
      if (!!this.maintainState) dart.assertFailed(null, I[0], 267, 12, "!maintainState");
      return this.visible ? this.child : this.replacement;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("visible", {value: this.visible, ifFalse: "hidden", ifTrue: "visible"}));
      properties.add(new diagnostics.FlagProperty.new("maintainState", {value: this.maintainState, ifFalse: "maintainState"}));
      properties.add(new diagnostics.FlagProperty.new("maintainAnimation", {value: this.maintainAnimation, ifFalse: "maintainAnimation"}));
      properties.add(new diagnostics.FlagProperty.new("maintainSize", {value: this.maintainSize, ifFalse: "maintainSize"}));
      properties.add(new diagnostics.FlagProperty.new("maintainSemantics", {value: this.maintainSemantics, ifFalse: "maintainSemantics"}));
      properties.add(new diagnostics.FlagProperty.new("maintainInteractivity", {value: this.maintainInteractivity, ifFalse: "maintainInteractivity"}));
    }
  };
  (visibility.Visibility.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let replacement = opts && 'replacement' in opts ? opts.replacement : C[0] || CT.C0;
    let visible = opts && 'visible' in opts ? opts.visible : true;
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
    let maintainAnimation = opts && 'maintainAnimation' in opts ? opts.maintainAnimation : false;
    let maintainSize = opts && 'maintainSize' in opts ? opts.maintainSize : false;
    let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : false;
    let maintainInteractivity = opts && 'maintainInteractivity' in opts ? opts.maintainInteractivity : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[replacement$] = replacement;
    this[visible$] = visible;
    this[maintainState$] = maintainState;
    this[maintainAnimation$] = maintainAnimation;
    this[maintainSize$] = maintainSize;
    this[maintainSemantics$] = maintainSemantics;
    this[maintainInteractivity$] = maintainInteractivity;
    if (!(child !== null)) dart.assertFailed(null, I[0], 65, 15, "child != null");
    if (!(replacement !== null)) dart.assertFailed(null, I[0], 66, 15, "replacement != null");
    if (!(visible !== null)) dart.assertFailed(null, I[0], 67, 15, "visible != null");
    if (!(maintainState !== null)) dart.assertFailed(null, I[0], 68, 15, "maintainState != null");
    if (!(maintainAnimation !== null)) dart.assertFailed(null, I[0], 69, 15, "maintainAnimation != null");
    if (!(maintainSize !== null)) dart.assertFailed(null, I[0], 70, 15, "maintainSize != null");
    if (!(maintainState === true || maintainAnimation === false)) dart.assertFailed("Cannot maintain animations if the state is not also maintained.", I[0], 72, 10, "maintainState == true || maintainAnimation == false");
    if (!(maintainAnimation === true || maintainSize === false)) dart.assertFailed("Cannot maintain size if animations are not maintained.", I[0], 76, 10, "maintainAnimation == true || maintainSize == false");
    if (!(maintainSize === true || maintainSemantics === false)) dart.assertFailed("Cannot maintain semantics if size is not maintained.", I[0], 80, 10, "maintainSize == true || maintainSemantics == false");
    if (!(maintainSize === true || maintainInteractivity === false)) dart.assertFailed("Cannot maintain interactivity if size is not maintained.", I[0], 84, 10, "maintainSize == true || maintainInteractivity == false");
    visibility.Visibility.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility.Visibility.prototype;
  (visibility.Visibility.maintain = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let replacement = opts && 'replacement' in opts ? opts.replacement : C[2] || CT.C2;
    let visible = opts && 'visible' in opts ? opts.visible : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[replacement$] = replacement;
    this[visible$] = visible;
    if (!(child !== null)) dart.assertFailed(null, I[0], 101, 16, "child != null");
    if (!(replacement !== null)) dart.assertFailed(null, I[0], 102, 16, "replacement != null");
    if (!(visible !== null)) dart.assertFailed(null, I[0], 103, 16, "visible != null");
    this[maintainState$] = true;
    this[maintainAnimation$] = true;
    this[maintainSize$] = true;
    this[maintainSemantics$] = true;
    this[maintainInteractivity$] = true;
    visibility.Visibility.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility.Visibility.prototype;
  dart.addTypeTests(visibility.Visibility);
  dart.addTypeCaches(visibility.Visibility);
  dart.setMethodSignature(visibility.Visibility, () => ({
    __proto__: dart.getMethods(visibility.Visibility.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(visibility.Visibility, I[1]);
  dart.setFieldSignature(visibility.Visibility, () => ({
    __proto__: dart.getFields(visibility.Visibility.__proto__),
    child: dart.finalFieldType(framework.Widget),
    replacement: dart.finalFieldType(framework.Widget),
    visible: dart.finalFieldType(core.bool),
    maintainState: dart.finalFieldType(core.bool),
    maintainAnimation: dart.finalFieldType(core.bool),
    maintainSize: dart.finalFieldType(core.bool),
    maintainSemantics: dart.finalFieldType(core.bool),
    maintainInteractivity: dart.finalFieldType(core.bool)
  }));
  var sliver$ = dart.privateName(visibility, "SliverVisibility.sliver");
  var replacementSliver$ = dart.privateName(visibility, "SliverVisibility.replacementSliver");
  var visible$0 = dart.privateName(visibility, "SliverVisibility.visible");
  var maintainState$0 = dart.privateName(visibility, "SliverVisibility.maintainState");
  var maintainAnimation$0 = dart.privateName(visibility, "SliverVisibility.maintainAnimation");
  var maintainSize$0 = dart.privateName(visibility, "SliverVisibility.maintainSize");
  var maintainSemantics$0 = dart.privateName(visibility, "SliverVisibility.maintainSemantics");
  var maintainInteractivity$0 = dart.privateName(visibility, "SliverVisibility.maintainInteractivity");
  visibility.SliverVisibility = class SliverVisibility extends framework.StatelessWidget {
    get sliver() {
      return this[sliver$];
    }
    set sliver(value) {
      super.sliver = value;
    }
    get replacementSliver() {
      return this[replacementSliver$];
    }
    set replacementSliver(value) {
      super.replacementSliver = value;
    }
    get visible() {
      return this[visible$0];
    }
    set visible(value) {
      super.visible = value;
    }
    get maintainState() {
      return this[maintainState$0];
    }
    set maintainState(value) {
      super.maintainState = value;
    }
    get maintainAnimation() {
      return this[maintainAnimation$0];
    }
    set maintainAnimation(value) {
      super.maintainAnimation = value;
    }
    get maintainSize() {
      return this[maintainSize$0];
    }
    set maintainSize(value) {
      super.maintainSize = value;
    }
    get maintainSemantics() {
      return this[maintainSemantics$0];
    }
    set maintainSemantics(value) {
      super.maintainSemantics = value;
    }
    get maintainInteractivity() {
      return this[maintainInteractivity$0];
    }
    set maintainInteractivity(value) {
      super.maintainInteractivity = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let sliver = opts && 'sliver' in opts ? opts.sliver : null;
      let replacementSliver = opts && 'replacementSliver' in opts ? opts.replacementSliver : C[10] || CT.C10;
      let visible = opts && 'visible' in opts ? opts.visible : true;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
      let maintainAnimation = opts && 'maintainAnimation' in opts ? opts.maintainAnimation : false;
      let maintainSize = opts && 'maintainSize' in opts ? opts.maintainSize : false;
      let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : false;
      let maintainInteractivity = opts && 'maintainInteractivity' in opts ? opts.maintainInteractivity : false;
      return new visibility.SliverVisibility.new({key: key, sliver: sliver, replacementSliver: replacementSliver, visible: visible, maintainState: maintainState, maintainAnimation: maintainAnimation, maintainSize: maintainSize, maintainSemantics: maintainSemantics, maintainInteractivity: maintainInteractivity, $creationLocationd_0dea112b090073317d4: C[14] || CT.C14});
    }
    static ['_#maintain#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let sliver = opts && 'sliver' in opts ? opts.sliver : null;
      let replacementSliver = opts && 'replacementSliver' in opts ? opts.replacementSliver : C[12] || CT.C12;
      let visible = opts && 'visible' in opts ? opts.visible : true;
      return new visibility.SliverVisibility.maintain({key: key, sliver: sliver, replacementSliver: replacementSliver, visible: visible, $creationLocationd_0dea112b090073317d4: C[15] || CT.C15});
    }
    build(context) {
      if (this.maintainSize) {
        let result = this.sliver;
        if (!this.maintainInteractivity) {
          result = new sliver.SliverIgnorePointer.new({sliver: this.sliver, ignoring: !this.visible, ignoringSemantics: !this.visible && !this.maintainSemantics, $creationLocationd_0dea112b090073317d4: C[16] || CT.C16});
        }
        return new visibility._SliverVisibility.new({visible: this.visible, maintainSemantics: this.maintainSemantics, sliver: result, $creationLocationd_0dea112b090073317d4: C[17] || CT.C17});
      }
      if (!!this.maintainInteractivity) dart.assertFailed(null, I[0], 512, 12, "!maintainInteractivity");
      if (!!this.maintainSemantics) dart.assertFailed(null, I[0], 513, 12, "!maintainSemantics");
      if (!!this.maintainSize) dart.assertFailed(null, I[0], 514, 12, "!maintainSize");
      if (this.maintainState) {
        let result = this.sliver;
        if (!this.maintainAnimation) {
          result = new ticker_provider.TickerMode.new({enabled: this.visible, child: this.sliver, $creationLocationd_0dea112b090073317d4: C[18] || CT.C18});
        }
        return new sliver.SliverOffstage.new({sliver: result, offstage: !this.visible, $creationLocationd_0dea112b090073317d4: C[19] || CT.C19});
      }
      if (!!this.maintainAnimation) dart.assertFailed(null, I[0], 525, 12, "!maintainAnimation");
      if (!!this.maintainState) dart.assertFailed(null, I[0], 526, 12, "!maintainState");
      return this.visible ? this.sliver : this.replacementSliver;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("visible", {value: this.visible, ifFalse: "hidden", ifTrue: "visible"}));
      properties.add(new diagnostics.FlagProperty.new("maintainState", {value: this.maintainState, ifFalse: "maintainState"}));
      properties.add(new diagnostics.FlagProperty.new("maintainAnimation", {value: this.maintainAnimation, ifFalse: "maintainAnimation"}));
      properties.add(new diagnostics.FlagProperty.new("maintainSize", {value: this.maintainSize, ifFalse: "maintainSize"}));
      properties.add(new diagnostics.FlagProperty.new("maintainSemantics", {value: this.maintainSemantics, ifFalse: "maintainSemantics"}));
      properties.add(new diagnostics.FlagProperty.new("maintainInteractivity", {value: this.maintainInteractivity, ifFalse: "maintainInteractivity"}));
    }
  };
  (visibility.SliverVisibility.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let replacementSliver = opts && 'replacementSliver' in opts ? opts.replacementSliver : C[10] || CT.C10;
    let visible = opts && 'visible' in opts ? opts.visible : true;
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
    let maintainAnimation = opts && 'maintainAnimation' in opts ? opts.maintainAnimation : false;
    let maintainSize = opts && 'maintainSize' in opts ? opts.maintainSize : false;
    let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : false;
    let maintainInteractivity = opts && 'maintainInteractivity' in opts ? opts.maintainInteractivity : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[sliver$] = sliver;
    this[replacementSliver$] = replacementSliver;
    this[visible$0] = visible;
    this[maintainState$0] = maintainState;
    this[maintainAnimation$0] = maintainAnimation;
    this[maintainSize$0] = maintainSize;
    this[maintainSemantics$0] = maintainSemantics;
    this[maintainInteractivity$0] = maintainInteractivity;
    if (!(sliver !== null)) dart.assertFailed(null, I[0], 332, 15, "sliver != null");
    if (!(replacementSliver !== null)) dart.assertFailed(null, I[0], 333, 15, "replacementSliver != null");
    if (!(visible !== null)) dart.assertFailed(null, I[0], 334, 15, "visible != null");
    if (!(maintainState !== null)) dart.assertFailed(null, I[0], 335, 15, "maintainState != null");
    if (!(maintainAnimation !== null)) dart.assertFailed(null, I[0], 336, 15, "maintainAnimation != null");
    if (!(maintainSize !== null)) dart.assertFailed(null, I[0], 337, 15, "maintainSize != null");
    if (!(maintainSemantics !== null)) dart.assertFailed(null, I[0], 338, 15, "maintainSemantics != null");
    if (!(maintainInteractivity !== null)) dart.assertFailed(null, I[0], 339, 15, "maintainInteractivity != null");
    if (!(maintainState === true || maintainAnimation === false)) dart.assertFailed("Cannot maintain animations if the state is not also maintained.", I[0], 341, 10, "maintainState == true || maintainAnimation == false");
    if (!(maintainAnimation === true || maintainSize === false)) dart.assertFailed("Cannot maintain size if animations are not maintained.", I[0], 345, 10, "maintainAnimation == true || maintainSize == false");
    if (!(maintainSize === true || maintainSemantics === false)) dart.assertFailed("Cannot maintain semantics if size is not maintained.", I[0], 349, 10, "maintainSize == true || maintainSemantics == false");
    if (!(maintainSize === true || maintainInteractivity === false)) dart.assertFailed("Cannot maintain interactivity if size is not maintained.", I[0], 353, 10, "maintainSize == true || maintainInteractivity == false");
    visibility.SliverVisibility.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility.SliverVisibility.prototype;
  (visibility.SliverVisibility.maintain = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let replacementSliver = opts && 'replacementSliver' in opts ? opts.replacementSliver : C[12] || CT.C12;
    let visible = opts && 'visible' in opts ? opts.visible : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[sliver$] = sliver;
    this[replacementSliver$] = replacementSliver;
    this[visible$0] = visible;
    if (!(sliver !== null)) dart.assertFailed(null, I[0], 370, 16, "sliver != null");
    if (!(replacementSliver !== null)) dart.assertFailed(null, I[0], 371, 16, "replacementSliver != null");
    if (!(visible !== null)) dart.assertFailed(null, I[0], 372, 16, "visible != null");
    this[maintainState$0] = true;
    this[maintainAnimation$0] = true;
    this[maintainSize$0] = true;
    this[maintainSemantics$0] = true;
    this[maintainInteractivity$0] = true;
    visibility.SliverVisibility.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility.SliverVisibility.prototype;
  dart.addTypeTests(visibility.SliverVisibility);
  dart.addTypeCaches(visibility.SliverVisibility);
  dart.setMethodSignature(visibility.SliverVisibility, () => ({
    __proto__: dart.getMethods(visibility.SliverVisibility.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(visibility.SliverVisibility, I[1]);
  dart.setFieldSignature(visibility.SliverVisibility, () => ({
    __proto__: dart.getFields(visibility.SliverVisibility.__proto__),
    sliver: dart.finalFieldType(framework.Widget),
    replacementSliver: dart.finalFieldType(framework.Widget),
    visible: dart.finalFieldType(core.bool),
    maintainState: dart.finalFieldType(core.bool),
    maintainAnimation: dart.finalFieldType(core.bool),
    maintainSize: dart.finalFieldType(core.bool),
    maintainSemantics: dart.finalFieldType(core.bool),
    maintainInteractivity: dart.finalFieldType(core.bool)
  }));
  var visible$1 = dart.privateName(visibility, "_Visibility.visible");
  var maintainSemantics$1 = dart.privateName(visibility, "_Visibility.maintainSemantics");
  visibility._Visibility = class _Visibility extends framework.SingleChildRenderObjectWidget {
    get visible() {
      return this[visible$1];
    }
    set visible(value) {
      super.visible = value;
    }
    get maintainSemantics() {
      return this[maintainSemantics$1];
    }
    set maintainSemantics(value) {
      super.maintainSemantics = value;
    }
    static ['_#new#tearOff'](opts) {
      let visible = opts && 'visible' in opts ? opts.visible : null;
      let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new visibility._Visibility.new({visible: visible, maintainSemantics: maintainSemantics, child: child, $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
    }
    createRenderObject(context) {
      return new visibility._RenderVisibility.new(this.visible, this.maintainSemantics);
    }
    updateRenderObject(context, renderObject) {
      let t0;
      object.RenderObject.as(renderObject);
      t0 = visibility._RenderVisibility.as(renderObject);
      (() => {
        t0.visible = this.visible;
        t0.maintainSemantics = this.maintainSemantics;
        return t0;
      })();
    }
  };
  (visibility._Visibility.new = function(opts) {
    let visible = opts && 'visible' in opts ? opts.visible : null;
    let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[visible$1] = visible;
    this[maintainSemantics$1] = maintainSemantics;
    visibility._Visibility.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility._Visibility.prototype;
  dart.addTypeTests(visibility._Visibility);
  dart.addTypeCaches(visibility._Visibility);
  dart.setMethodSignature(visibility._Visibility, () => ({
    __proto__: dart.getMethods(visibility._Visibility.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(visibility._Visibility, I[1]);
  dart.setFieldSignature(visibility._Visibility, () => ({
    __proto__: dart.getFields(visibility._Visibility.__proto__),
    visible: dart.finalFieldType(core.bool),
    maintainSemantics: dart.finalFieldType(core.bool)
  }));
  var _visible$ = dart.privateName(visibility, "_visible");
  var _maintainSemantics$ = dart.privateName(visibility, "_maintainSemantics");
  visibility._RenderVisibility = class _RenderVisibility extends proxy_box.RenderProxyBox {
    static ['_#new#tearOff'](_visible, _maintainSemantics) {
      return new visibility._RenderVisibility.new(_visible, _maintainSemantics);
    }
    get visible() {
      return this[_visible$];
    }
    set visible(value) {
      if (value === this.visible) {
        return;
      }
      this[_visible$] = value;
      this.markNeedsPaint();
    }
    get maintainSemantics() {
      return this[_maintainSemantics$];
    }
    set maintainSemantics(value) {
      if (value === this.maintainSemantics) {
        return;
      }
      this[_maintainSemantics$] = value;
      this.markNeedsSemanticsUpdate();
    }
    visitChildrenForSemantics(visitor) {
      if (this.maintainSemantics || this.visible) {
        super.visitChildrenForSemantics(visitor);
      }
    }
    paint(context, offset) {
      if (!this.visible) {
        return;
      }
      super.paint(context, offset);
    }
  };
  (visibility._RenderVisibility.new = function(_visible, _maintainSemantics) {
    this[_visible$] = _visible;
    this[_maintainSemantics$] = _maintainSemantics;
    visibility._RenderVisibility.__proto__.new.call(this);
    ;
  }).prototype = visibility._RenderVisibility.prototype;
  dart.addTypeTests(visibility._RenderVisibility);
  dart.addTypeCaches(visibility._RenderVisibility);
  dart.setGetterSignature(visibility._RenderVisibility, () => ({
    __proto__: dart.getGetters(visibility._RenderVisibility.__proto__),
    visible: core.bool,
    maintainSemantics: core.bool
  }));
  dart.setSetterSignature(visibility._RenderVisibility, () => ({
    __proto__: dart.getSetters(visibility._RenderVisibility.__proto__),
    visible: core.bool,
    maintainSemantics: core.bool
  }));
  dart.setLibraryUri(visibility._RenderVisibility, I[1]);
  dart.setFieldSignature(visibility._RenderVisibility, () => ({
    __proto__: dart.getFields(visibility._RenderVisibility.__proto__),
    [_visible$]: dart.fieldType(core.bool),
    [_maintainSemantics$]: dart.fieldType(core.bool)
  }));
  var visible$2 = dart.privateName(visibility, "_SliverVisibility.visible");
  var maintainSemantics$2 = dart.privateName(visibility, "_SliverVisibility.maintainSemantics");
  visibility._SliverVisibility = class _SliverVisibility extends framework.SingleChildRenderObjectWidget {
    get visible() {
      return this[visible$2];
    }
    set visible(value) {
      super.visible = value;
    }
    get maintainSemantics() {
      return this[maintainSemantics$2];
    }
    set maintainSemantics(value) {
      super.maintainSemantics = value;
    }
    static ['_#new#tearOff'](opts) {
      let visible = opts && 'visible' in opts ? opts.visible : null;
      let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : null;
      let sliver = opts && 'sliver' in opts ? opts.sliver : null;
      return new visibility._SliverVisibility.new({visible: visible, maintainSemantics: maintainSemantics, sliver: sliver, $creationLocationd_0dea112b090073317d4: C[21] || CT.C21});
    }
    createRenderObject(context) {
      return new visibility._RenderSliverVisibility.new(this.visible, this.maintainSemantics);
    }
    updateRenderObject(context, renderObject) {
      let t0;
      object.RenderObject.as(renderObject);
      t0 = visibility._RenderSliverVisibility.as(renderObject);
      (() => {
        t0.visible = this.visible;
        t0.maintainSemantics = this.maintainSemantics;
        return t0;
      })();
    }
  };
  (visibility._SliverVisibility.new = function(opts) {
    let visible = opts && 'visible' in opts ? opts.visible : null;
    let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[visible$2] = visible;
    this[maintainSemantics$2] = maintainSemantics;
    visibility._SliverVisibility.__proto__.new.call(this, {child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility._SliverVisibility.prototype;
  dart.addTypeTests(visibility._SliverVisibility);
  dart.addTypeCaches(visibility._SliverVisibility);
  dart.setMethodSignature(visibility._SliverVisibility, () => ({
    __proto__: dart.getMethods(visibility._SliverVisibility.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(visibility._SliverVisibility, I[1]);
  dart.setFieldSignature(visibility._SliverVisibility, () => ({
    __proto__: dart.getFields(visibility._SliverVisibility.__proto__),
    visible: dart.finalFieldType(core.bool),
    maintainSemantics: dart.finalFieldType(core.bool)
  }));
  visibility._RenderSliverVisibility = class _RenderSliverVisibility extends proxy_sliver.RenderProxySliver {
    static ['_#new#tearOff'](_visible, _maintainSemantics) {
      return new visibility._RenderSliverVisibility.new(_visible, _maintainSemantics);
    }
    get visible() {
      return this[_visible$];
    }
    set visible(value) {
      if (value === this.visible) {
        return;
      }
      this[_visible$] = value;
      this.markNeedsPaint();
    }
    get maintainSemantics() {
      return this[_maintainSemantics$];
    }
    set maintainSemantics(value) {
      if (value === this.maintainSemantics) {
        return;
      }
      this[_maintainSemantics$] = value;
      this.markNeedsSemanticsUpdate();
    }
    visitChildrenForSemantics(visitor) {
      if (this.maintainSemantics || this.visible) {
        super.visitChildrenForSemantics(visitor);
      }
    }
    paint(context, offset) {
      if (!this.visible) {
        return;
      }
      super.paint(context, offset);
    }
  };
  (visibility._RenderSliverVisibility.new = function(_visible, _maintainSemantics) {
    this[_visible$] = _visible;
    this[_maintainSemantics$] = _maintainSemantics;
    visibility._RenderSliverVisibility.__proto__.new.call(this);
    ;
  }).prototype = visibility._RenderSliverVisibility.prototype;
  dart.addTypeTests(visibility._RenderSliverVisibility);
  dart.addTypeCaches(visibility._RenderSliverVisibility);
  dart.setGetterSignature(visibility._RenderSliverVisibility, () => ({
    __proto__: dart.getGetters(visibility._RenderSliverVisibility.__proto__),
    visible: core.bool,
    maintainSemantics: core.bool
  }));
  dart.setSetterSignature(visibility._RenderSliverVisibility, () => ({
    __proto__: dart.getSetters(visibility._RenderSliverVisibility.__proto__),
    visible: core.bool,
    maintainSemantics: core.bool
  }));
  dart.setLibraryUri(visibility._RenderSliverVisibility, I[1]);
  dart.setFieldSignature(visibility._RenderSliverVisibility, () => ({
    __proto__: dart.getFields(visibility._RenderSliverVisibility.__proto__),
    [_visible$]: dart.fieldType(core.bool),
    [_maintainSemantics$]: dart.fieldType(core.bool)
  }));
  dart.trackLibraries("packages/flutter/src/widgets/visibility.dart", {
    "package:flutter/src/widgets/visibility.dart": visibility
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["visibility.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/widgets/visibility.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__visibility: visibility
  };
}));

//# sourceMappingURL=visibility.dart.lib.js.map
